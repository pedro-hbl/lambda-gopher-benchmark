FROM golang:1.21-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache git

# Copy go.mod and go.sum
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy the source code
COPY . .

# Build the Lambda function with optimizations
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \
    go build -ldflags="-s -w" -o /benchmark ./cmd/benchmark

# Lambda container image
FROM public.ecr.aws/lambda/provided:al2

# Copy the compiled binary
COPY --from=builder /benchmark ${LAMBDA_TASK_ROOT}

# Set the handler name (matches the binary name)
CMD [ "benchmark" ]

# Create the minimal runtime image
FROM alpine:3.18

WORKDIR /

# Install AWS Lambda Runtime Interface Emulator for local testing
RUN apk add --no-cache curl && \
    curl -Lo /usr/local/bin/aws-lambda-rie https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie && \
    chmod +x /usr/local/bin/aws-lambda-rie

# Copy the bootstrap binary
COPY --from=builder /app/bootstrap /bootstrap

# Copy the entry script
COPY deployments/docker/entry.sh /entry.sh
RUN chmod +x /entry.sh

# Set the entrypoint
ENTRYPOINT ["/entry.sh"] 